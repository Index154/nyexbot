levelRequirements:
	create table levelRequirements(
		level tinyint unsigned unique auto_increment not null,
		requiredExp smallint not null,
		primary key (level)
	);
Filling method: Automatic or manual

bossNameModifiers:
	create table bossNameModifiers(
		modifierId tinyint unsigned unique auto_increment not null,
		modifierName varchar(20) unique not null,
		primary key (modifierId)
	);
Filling method: Automatic

vortexLootPools:
	create table vortexLootPools(
		vortexLootPoolId smallint unsigned unique auto_increment not null,
		vortexLootPoolName varchar(20) unique not null,
		minDrops tinyint unsigned not null,
		maxDrops tinyint unsigned not null,
		rareDropChance tinyint unsigned not null,
		veryRareDropChance tinyint unsigned not null,
		primary key (vortexLootPoolId)
	);
Filling method: Manual

dailyRewards:
	create table dailyRewards(
		rewardId tinyint unsigned unique auto_increment not null,
		rewardType varchar(10) not null,
		value smallint unsigned not null,
		weight tinyint unsigned not null,
		primary key (rewardId)
	);
(value can be the amount or the id, depending on the type of reward)
Filling method: Manual

quests:
	create table quests(
		questId smallint unsigned unique auto_increment not null,
		targetType varchar(10) not null,
		target smallint unsigned not null,
		targetAmount tinyint unsigned not null,
		rewardType varchar(15) not null,
		reward smallint unsigned not null,
		rewardAmount smallint unsigned not null,
		startText varchar(255),
		finishText varchar(255),
		suggestedSource varchar(35) not null,
		primary key (questId)
	);
Filling method: Automatic

classes:
	create table classes(
		classId tinyint unsigned unique auto_increment not null,
		className varchar(20) unique not null,
		fullDescription varchar(150) not null,
		shortDescription varchar(60) not null,
		primary key (classId)
	);
Filling method: Manual

dropPools:
	create table dropPools(
		dropPoolId smallint unsigned unique auto_increment not null,
		dropPoolName varchar(40) unique not null,
		primary key (dropPoolId)
	);
Filling method: Automatic

itemTypes:
	create table itemTypes(
		itemTypeId tinyint unsigned unique auto_increment not null,
		itemTypeName varchar(30) unique not null,
		isConsumable bool not null,
		givesBuff bool not null,
		batchUsePossible bool not null,
		isMaterial bool not null,
		isWeapon bool not null,
		isDefense bool not null,
		isTool bool not null,
		primary key (itemTypeId)
	);
Filling method: Manual
(For defining the way the item can be utilized)

itemRanks:
	create table itemRarities(
		itemRankId tinyint unsigned unique auto_increment not null,
		name varchar(5) unique not null,
		iconId tinyint unsigned not null,
		primary key (itemRankId),
		foreign key (iconId) references icons(iconId)
	);
Filling method: Manual
Requires: icons
(For defining the item ranks like D or S. Vortexes and such should not have special "ranks". That will become the itemCategory instead!)

commands:
	create table commands(
		commandId tinyint unsigned unique auto_increment not null,
		commandName varchar(20) unique not null,
		primary key (commandId)
	);
Filling method: Manual
(Only used for other tables to reference commands by id)

equipmentAbilities:
	create table equipmentAbilities(
		abilityId smallint unsigned unique auto_increment not null,
		activationCommand tinyint unsigned not null,
		abilityName varchar(15) unique not null,
		abilityDescription varchar(60) not null,
		abilityMessage varchar(50) not null,
		lowChance tinyint unsigned not null,
		mediumChance tinyint unsigned not null,
		highChance tinyint unsigned not null,
		lowCount tinyint unsigned not null,
		mediumCount tinyint unsigned not null,
		highCount tinyint unsigned not null,
		lowTime tinyint unsigned not null,
		mediumTime tinyint unsigned not null,
		highTime tinyint unsigned not null,
		lowValue tinyint unsigned,
		mediumValue tinyint unsigned,
		highValue tinyint unsigned,
		primary key (abilityId),
		foreign key (activationCommand) references commands(commandId)
	);
Filling method: Manual
Requires: commands
(activationCommand is either encounter ID, fight ID, capture ID or a sum of the latter two indicating both as activation commands)

itemCategories:
	create table itemCategories(
		itemCategoryId tinyint unsigned unique auto_increment not null,
		itemCategoryName varchar(50) unique not null,
		iconId tinyint unsigned not null,
		primary key (itemCategoryId),
		foreign key (iconId) references icons(iconId)
	);
Filling method: Manual
Requires: icons

items:
	create table items(
		itemId smallint unsigned unique auto_increment not null,
		itemName varchar(50) unique not null,
		attack smallint not null default 0,
		speed smallint not null default 0,
		mana smallint not null default 0,
		monsterLuck smallint not null default 0,
		dropLuck smallint not null default 0,
		rareLuck smallint not null default 0,
		description varchar(400) not null,
		itemTypeId tinyint unsigned not null,
		itemRankId tinyint unsigned not null,
		itemCategoryId tinyint unsigned not null,
		useDuration tinyint unsigned,
		extraValue smallint unsigned,
		primary key (itemId),
		foreign key (itemTypeId) references itemTypes(itemTypeId),
		foreign key (itemRankId) references itemRarities(itemRankId),
		foreign key (itemCategoryId) references itemCategories(itemCategoryId)
	);
	CREATE INDEX itemNameIndex ON items (itemName);
Filling method: Automatic
Requires: itemRarities, itemTypes, itemCategories
(extraValue can be the abilityId, the vortexLootPoolId, the realmId, etc.)

recipes:
	create table recipes(
		recipeId smallint unsigned unique auto_increment not null,
		resultItemId smallint unsigned not null,
		recipeTypeId tinyint unsigned not null,
		primary key (recipeId),
		foreign key (resultItemId) references items(itemId),
		foreign key (recipeTypeId) references recipeTypes(recipeTypeId)
	);
Filling method: Automatic
Requires: items, recipeTypes

recipeIngredients:
	create table recipeIngredients(
		recipeId smallint unsigned not null,
		itemId smallint unsigned not null,
		amount tinyint unsigned not null,
		primary key (recipeId, itemId),
		foreign key (recipeId) references recipes(recipeId),
		foreign key (itemId) references items(itemId)
	);
Filling method: Automatic
Requires: items, recipes

classAbilities:
	create table classAbilities(
		classAbilityId tinyint unsigned unique auto_increment not null,
		classId tinyint unsigned not null,
		requiredLevel tinyint unsigned not null,
		abilityName varchar(40) unique not null,
		abilityDescription varchar(100) not null,
		abilityMessage varchar(100) not null,
		primary key (classAbilityId),
		foreign key (classId) references classes(classId)
	);
Filling method: Manual
Requires: classes

monsterTypes
	create table monsterTypes(
		typeId tinyint unsigned unique auto_increment not null,
		typeName varchar(20) unique not null,
		iconId tinyint unsigned not null,
		primary key (typeId),
		foreign key (iconId) references icons(iconId)
	);
Filling method: Manual
Requires: icons

monsterRarities:
	create table monsterRarities(
		monsterRarityId tinyint unsigned unique auto_increment not null,
		iconId tinyint unsigned not null,
		rarityName varchar(5) unique not null,
		shinyPrice smallint unsigned not null,
		shinyShopChance tinyint unsigned not null,
		bossChance tinyint unsigned not null,
		primary key (monsterRarityId),
		foreign key (iconId) references icons(iconId)
	);
Filling method: Manual
Requires: icons

monsterTypeEffects:
	create table monsterTypeEffects(
		typeId tinyint unsigned not null,
		monsterRarityId tinyint unsigned not null,
		procChanceWin tinyint unsigned,
		procChanceLose tinyint unsigned,
		procChanceWinBuffed tinyint unsigned,
		procChanceLoseBuffed tinyint unsigned,
		negatingTypeId tinyint unsigned not null,
		buffingTypeId tinyint unsigned not null,
		primary key (typeId, monsterRarityId),
		foreign key (typeId) references monsterTypes(typeId),
		foreign key (monsterRarityId) references monsterRarities(monsterRarityId),
		foreign key (negatingTypeId) references monsterTypes(typeId),
		foreign key (buffingTypeId) references monsterTypes(typeId)
	);
Filling method: Manual
Requires: monsterTypes, monsterRarities

userRanks:
	create table userRanks(
		userRankId tinyint unsigned unique auto_increment not null,
		questId smallint unsigned unique not null,
		rankName varchar(3) unique not null,
		primary key (userRankId),
		foreign key (questId) references quests(questId)
	);
Filling method: Manual
Requires: quests

trophies:
	create table trophies(
		trophyId smallint unsigned unique auto_increment not null,
		trophyName varchar(25) not null,
		iconId tinyint unsigned not null,
		userRankId tinyint unsigned not null,
		value smallint unsigned not null,
		weight tinyint unsigned not null,
		description varchar(60) not null,
		primary key (trophyId),
		foreign key (iconId) references icons(iconId),
		foreign key (userRankId) references userRanks(userRankId)
	);
Filling method: Manual
Requires: icons, userRanks

monsters:
	create table monsters(
		monsterId smallint(4) unsigned unique auto_increment not null,
		monsterName varchar(50) unique not null,
		attack smallint not null,
		speed smallint not null,
		description varchar(500) not null,
		image varchar(60) unique not null,
		fromUniqueRealm bool not null,
		blessingId tinyint unsigned not null,
		shinyImage varchar(60) unique,
		shinyDescription varchar(500) not null,
		dropPoolId smallint unsigned not null,
		monsterRarityId tinyint unsigned not null,
		primary key (monsterId),
		foreign key (dropPoolId) references dropPools(dropPoolId),
		foreign key (monsterRarityId) references monsterRarities(monsterRarityId)
	);
	CREATE INDEX monsterNameIndex ON monsters (monsterName);
Filling method: Automatic
Requires: dropPools, monsterRarities

dailyQuests:
	create table dailyQuests(
		day smallint unsigned not null,
		userRankId tinyint unsigned not null,
		monsterId smallint unsigned not null,
		rewardId smallint unsigned not null,
		areaId tinyint unsigned not null,
		primary key (day),
		foreign key (userRankId) references userRanks(userRankId),
		foreign key (monsterId) references monsters(monsterId),
		foreign key (rewardId) references items(itemId),
		foreign key (areaId) references areas(areaId)
	);
Filling method: Natural
Requires: userRanks, monsters, dailyRewards, areas

users:
	create table users(
		userId varchar(20) unique not null,
		username varchar(70) not null,
		userType varchar(20) not null,
		userRankId tinyint unsigned not null,
		classId tinyint unsigned not null,
		attack smallint not null,
		speed smallint not null,
		mana smallint not null,
		monsterLuck smallint not null,
		dropLuck smallint not null,
		rareLuck smallint not null,
		level smallint unsigned not null,
		exp smallint unsigned not null,
		gold mediumint unsigned not null,
		scrap mediumint unsigned not null,
		radarCharges smallint unsigned not null,
		statPoints smallint unsigned not null,
		hp smallint unsigned,
		areaId tinyint unsigned not null,
		abilityId smallint unsigned not null,
		abilityTimestamp timestamp,
		bossTimestamp timestamp,
		recipeId smallint unsigned not null,
		questId smallint unsigned not null,
		lastDaily smallint unsigned not null,
		dailyStreak tinyint unsigned not null,
		radarTimestamp timestamp,
		favoriteMonsterId smallint unsigned not null,
		monsterTimestamp timestamp,
		updateDMs bool not null,
		funnyMode bool not null,
		singleCommandMode bool not null,
		radarBonus tinyint not null,
		tokenPoints smallint unsigned not null,
		primary key (userId),
		foreign key (classId) references classes(classId),
		foreign key (userRankId) references userRanks(userRankId),
		foreign key (abilityId) references equipmentAbilities(abilityId),
		foreign key (areaId) references areas(areaId),
		foreign key (recipeId) references recipes(recipeId),
		foreign key (questId) references quests(questId),
		foreign key (lastDaily) references dailyQuests(day),
		foreign key (favoriteMonsterId) references monsters(monsterId)
	);
Filling method: Natural
Requires: classes, userRanks, equipmentAbilities, areas, items, recipes, quests, dailyQuests, monsters

monsterModifiers:
	create table monsterModifiers(
		modifierId tinyint unsigned unique auto_increment not null,
		modifierName varchar(20) not null,
		triggerCommandId tinyint unsigned not null,
		rewardType varchar(20) not null,
		rewardValue smallint unsigned not null,
		primary key (modifierId),
		foreign key (triggerCommandId) references commands(commandId)
	);
Filling method: Manual
Requires: commands

encounters:
	create table encounters(
		encounterId int unsigned unique auto_increment not null,
		userId varchar(20) not null,
		monsterId smallint unsigned not null,
		isInStasis bool not null default false,
		isShiny bool not null default false,
		modifierId tinyint unsigned default null,
		primary key (encounterId),
		foreign key (userId) references users(userId),
		foreign key (monsterId) references monsters(monsterId),
		foreign key (modifierId) references monsterModifiers(modifierId)
	);
Filling method: Natural
Requires: users, monsters, monsterModifiers

obtainedTrophies:
	create table obtainedTrophies(
		obtainedTrophyId mediumint unsigned unique auto_increment not null,
		trophyId smallint unsigned not null,
		userId varchar(20) not null,
		customDescription varchar(60),
		primary key (obtainedTrophyId),
		foreign key (trophyId) references trophies(trophyId),
		foreign key (userId) references users(userId)
	);
Filling method: Natural
Requires: trophies, users

monsterBaseChances:
	create table monsterBaseChances(
		monsterRarityId tinyint unsigned not null,
		userRankId tinyint unsigned not null,
		chance smallint unsigned not null,
		primary key (monsterRarityId, userRankId),
		foreign key (monsterRarityId) references monsterRarities(monsterRarityId),
		foreign key (userRankId) references userRanks(userRankId)
	);
Filling method: Manual
Requires: monsterRarities, userRanks

shinyChains:
	create table shinyChains(
		chainId smallint unsigned not null,
		userId varchar(20) not null,
		monsterId smallint unsigned not null,
		chainCounter smallint unsigned not null,
		chainState varchar(20) default 'active',
		primary key (chainId),
		foreign key (userId) references users(userId),
		foreign key (monsterId) references monsters(monsterId)
	);
Filling method: Natural
Requires: users, monsters

heldConsumables:
	create table heldConsumables(
		itemId smallint unsigned not null,
		userId varchar(20) not null,
		amount smallint unsigned not null,
		primary key (itemId, userId),
		foreign key (itemId) references items(itemId),
		foreign key (userId) references users(userId)
	);
Filling method: Natural
Requires: items, users

heldMaterials:
	create table heldMaterials(
		itemId smallint unsigned not null,
		userId varchar(20) not null,
		amount smallint unsigned not null,
		isFavorite bool not null default 0,
		primary key (itemId, userId),
		foreign key (itemId) references items(itemId),
		foreign key (userId) references users(userId)
	);
Filling method: Natural
Requires: items, users

equipment:
	create table equipment(
		equipmentId mediumint unsigned unique auto_increment not null,
		userId varchar(20) not null,
		equipmentType varchar(20) not null,
		itemId smallint unsigned not null,
		modifierId tinyint unsigned not null,
		isNew bool not null default 1,
		primary key (equipmentId),
		foreign key (userId) references users(userId),
		foreign key (itemId) references items(itemId),
		foreign key (modifierId) references equipmentModifiers(modifierId)
	);
Filling method: Natural
Requires: users, items, equipmentModifiers

captures:
	create table captures(
		monsterId smallint unsigned not null,
		userId varchar(20) not null,
		isShiny bool not null default 0,
		amount smallint unsigned not null,
		primary key (monsterId, userId, isShiny),
		foreign key (monsterId) references monsters(monsterId),
		foreign key (userId) references users(userId)
	);
Filling method: Natural
Requires: monsters, users

projects:
	create table projects(
		projectId mediumint unsigned unique auto_increment not null,
		userId varchar(20) not null,
		state varchar(15) not null default 'new',
		researchId tinyint unsigned not null,
		startTime timestamp not null,
		primary key (projectId),
		foreign key (userId) references users(userId),
		foreign key (researchId) references research(researchId)
	);
Filling method: Natural
Requires: users, research

assignedMonsterTypes:
	create table assignedMonsterTypes(
		monsterId smallint unsigned not null,
		typeId tinyint unsigned not null,
		primary key (monsterId, typeId),
		foreign key (monsterId) references monsters(monsterId),
		foreign key (typeId) references monsterTypes(typeId)
	);
Filling method: Automatic
Requires: monsters, monsterTypes

monsterAreas:
	create table monsterAreas(
		monsterId smallint unsigned not null,
		areaId tinyint unsigned not null,
		primary key (monsterId, areaId),
		foreign key (monsterId) references monsters(monsterId),
		foreign key (areaId) references areas(areaId)
	);
Filling method: Automatic
Requires: monsters, areas

dropPoolItems:
	create table dropPoolItems(
		dropPoolId smallint unsigned not null,
		itemId smallint unsigned not null,
		chance tinyint unsigned not null,
		primary key (dropPoolId, itemId),
		foreign key (dropPoolId) references dropPools(dropPoolId),
		foreign key (itemId) references items(itemId)
	);
Filling method: Automatic
Requires: items, dropPools

confirmationPrompts:
	create table confirmationPrompts(
		userId varchar(20) not null,
		promptType varchar(15) not null,
		status varchar(15) not null default 'new',
		confirmationTime timestamp not null,
		primary key (userId, promptType),
		foreign key (userId) references users(userId)
	);
Filling method: Natural
Requires: users

possibleShopItems:
	create table possibleShopItems(
		shopItemId smallint unsigned unique auto_increment not null,
		itemId smallint unsigned not null,
		shopitemRankId tinyint unsigned not null,
		primary key (shopItemId),
		foreign key (itemId) references items(itemId),
		foreign key (shopitemRankId) references shopItemRarities(shopitemRankId)
	);
Filling method: Automatic
Requires: items, shopItemRarities

servers:
	create table servers(
		serverId varchar(20) unique not null,
		serverName varchar(50) not null,
		prefix varchar(10) not null default ',',
		botChannel varchar(20),
		guessState varchar(15) not null default 'inactive',
		topicId tinyint unsigned not null,
		primary key (serverId),
		foreign key (topicId) references guessTopics(topicId)
	);
Filling method: Manual / Natural
Requires: guessTopics

guessPrompts:
	create table guessPrompts(
		promptId smallint unsigned unique auto_increment not null,
		topicId tinyint unsigned not null,
		promptName varchar(50) unique not null,
		primary key (promptId),
		foreign key (topicId) references guessTopics(topicId)
	);
Filling method: Automatic
Requires: guessTopics

guessSolutions:
	create table guessSolutions(
		solutionId smallint unsigned unique auto_increment not null,
		promptId smallint unsigned not null,
		solution varchar(30) not null,
		primary key (solutionId),
		foreign key (promptId) references guessPrompts(promptId)
	);
Filling method: Automatic
Requires: guessPrompts

guesses:
	create table guesses(
		serverId varchar(20) not null,
		userId varchar(20) not null,
		submittedGuess varchar(80) not null,
		primary key (serverId, userId),
		foreign key (serverId) references servers(serverId),
		foreign key (userId) references users(userId)
	);
Filling method: Natural
Requires: servers, users

bossParticipants:
	create table bossParticipants(
		userId varchar(20) not null,
		totalDamage smallint unsigned not null,
		primary key (userId),
		foreign key (userId) references users(userId)
	);
Filling method: Natural
Requires: users

vortexLootItems:
	create table vortexLootItems(
		vortexLootItemId smallint unsigned unique auto_increment not null,
		vortexLootPoolId smallint unsigned not null,
		itemId smallint unsigned not null,
		dropRarity varchar(10) not null,
		primary key (vortexLootItemId),
		foreign key (vortexLootPoolId) references vortexLootPools(vortexLootPoolId),
		foreign key (itemId) references items(itemId)
	);
Filling method: Automatic
Requires: vortexLootPools, items

dailyStreakRewards:
	create table dailyStreakRewards(
		streak tinyint unsigned not null,
		itemId smallint unsigned not null,
		amount tinyint unsigned not null,
		primary key (streak, itemId),
		foreign key (itemId) references items(itemId)
	);
Filling method: Manual
Requires: items

realmDrops:
	create table realmDrops(
		dropId smallint unsigned unique auto_increment not null,
		areaId tinyint unsigned not null,
		monsterRarityId tinyint unsigned not null,
		itemId smallint unsigned not null,
		chance tinyint unsigned not null,
		primary key (dropId),
		foreign key (areaId) references areas(areaId),
		foreign key (itemId) references items(itemId),
		foreign key (monsterRarityId) references monsterRarities(monsterRarityId)
	);
Filling method: Manual
Requires: areas, items, monsterRarities